#version 460

#extension GL_EXT_ray_tracing                   : enable
#extension GL_GOOGLE_include_directive          : enable
#extension GL_EXT_shader_image_load_formatted	: enable

#include <shaders/dancing_penguin/shared.glsl>
#include <shaders/dancing_penguin/ray_payload.glsl>

#include <shaders/utils/tone_mapping.glsl>

layout(set = 0, binding = result_image_binding)             uniform image2D                     result;
layout(set = 0, binding = acceleration_structure_binding)   uniform accelerationStructureEXT    scene;

layout(push_constant) uniform push_constants_t
{
    layout(offset = 0) camera_t camera;
} push_constants;

layout(location = 0) rayPayloadEXT payload_t payload;

void init_payload()
{
    payload.col = vec3(0);
    payload.ray = get_primary_ray(push_constants.camera, ivec2(0, 0));
}

void main()
{
    init_payload();

    trace(payload.ray, scene);

    ivec2 pixel_coord = ivec2(gl_LaunchIDEXT.xy);
    pixel_coord.y = int(gl_LaunchSizeEXT.y - gl_LaunchIDEXT.y);
    
    vec3 col = white_preserving_luma_based_reinhard(payload.col);

    imageStore(result, pixel_coord, vec4(col, 0.0));
}